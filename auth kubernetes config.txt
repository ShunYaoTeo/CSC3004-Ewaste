this my auth service and db kubernetes configuration for your comparison, maybe i have missed out something that you will be able to see:

auth service deployment -

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-ewaste
  labels:
    app: auth-ewaste
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-ewaste
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: auth-ewaste
    spec:
      containers:
        - name: auth-ewaste
          image: shunyaoteo99/auth_ewaste
          ports:
            - containerPort: 5000
          env:
            - name: MYSQL_USER
              value: eWaste_user
            - name: MYSQL_DATABASE
              value: auth_eWaste
          envFrom:
            - configMapRef:
                name: auth-configmap
            - secretRef:
                name: auth-secret

auth service config map-
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-configmap
data:
  MYSQL_HOST: auth-db
  MYSQL_USER: eWaste_user
  MYSQL_DB: auth_eWaste
  MYSQL_PORT: "3306"


auth service secret-
apiVersion: v1
kind: Secret
metadata: 
  name: auth-secret
stringData:
  MYSQL_PASSWORD: CSC3005
  JWT_KEY: eWasteProjectShallBeAnotherA+
type: Opaque

auth service service-
apiVersion: v1
kind: Service
metadata:
  name: auth-ewaste
spec:
  selector:
    app: auth-ewaste
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP

auth db deployment -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
  labels:
    app: auth-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
      - name: auth-db
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: root-password
        - name: MYSQL_DATABASE
          value: auth_eWaste
        - name: MYSQL_USER
          value: eWaste_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: user-password
        volumeMounts:
        - name: auth-db-storage
          mountPath: /var/lib/mysql
        - name: auth-db-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: auth-db-storage
        persistentVolumeClaim:
          claimName: auth-db-pvc
      - name: auth-db-init
        configMap:
          name: auth-db-init

auth db configmap-
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-db-init
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS auth_eWaste;
    GRANT ALL PRIVILEGES ON auth_eWaste.* TO 'eWaste_user'@'%';
    USE auth_eWaste;
    CREATE TABLE IF NOT EXISTS user (
        id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        email VARCHAR(255) NOT NULL UNIQUE,
        username VARCHAR(255) NOT NULL,
        password VARCHAR(255) NOT NULL,
        admin BOOLEAN NOT NULL DEFAULT false,
        created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
    );
    INSERT INTO user (email, username, password, admin) VALUES ('shunyaoteo99@gmail.com', 'Shun Yao', 'Admin123', true);
    INSERT INTO user (email, username, password, admin) VALUES ('test@test.com', 'tester619', 'test', true);
    INSERT INTO user (email, username, password) VALUES ('user1@user.com', 'user1', 'user1');
    INSERT INTO user (email, username, password) VALUES ('user2@user.com', 'user2', 'user2');
    INSERT INTO user (email, username, password) VALUES ('user3@user.com','user3', 'user3');

auth db pvc -
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

auth db service-
apiVersion: v1
kind: Service
metadata:
  name: auth-db
spec:
  selector:
    app: auth-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

auth db secrets:
apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
type: Opaque
stringData:
# for school project purposes, these password are not encrypted.
  root-password: "root"
  user-password: "CSC3005"
